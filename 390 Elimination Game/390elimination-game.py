class Solution:
    def lastRemaining(self, n: int) -> int:
        '''
        [1] -> 1
        [2] -> 2
        [2, 4] -> 2
        [2, 4, 6] -> 4
        [2, 4, 6, 8] -> 6
        [2, 4, 6, 8, 10] -> 8
        [2, 4, 6, 8, 10, 12] -> [2, 6, 10] -> 6
        [2, 4, 6, 8, 10, 12, 14] -> [4, 8, 12] -> 8
        [2, 4, 6, 8, 10, 12, 14, 16] -> [2, 6, 10, 14] -> 6
        [2, 4, 6, 8, 10, 12, 14, 16, 18] -> [4, 8, 12, 16] -> 8
        [2, 4, 6, 8, 10, 12, 14, 16, 18, 20] -> [2, 6, 10, 14, 18] -> 6
        [2, 4, 6, 8, 10, 12, 14, 16, 18, 20, 22] -> [4, 8, 12, 16, 20] -> 8
        [2, 4, 6, 8, 10, 12, 14, 16, 18, 20, 22, 24] -> [2, 6, 10, 14, 18, 22] -> 14
        [2, 4, 6, 8, 10, 12, 14, 16, 18, 20, 22, 24, 26] -> [4, 8, 12, 16, 20, 24] -> 16
        [2, 4, 6, 8, 10, 12, 14, 16, 18, 20, 22, 24, 26, 28] -> [2, 6, 10, 14, 18, 22, 26] -> 14
        [2, 4, 6, 8, 10, 12, 14, 16, 18, 20, 22, 24, 26, 28, 30] -> [4, 8, 12, 16, 20, 24, 28] -> 16
        [2, 4, 6, 8, 10, 12, 14, 16, 18, 20, 22, 24, 26, 28, 30, 32] -> [2, 6, 10, 14, 18, 22, 26, 30] -> [6, 14, 22, 30] -> 22
        [2, 4, 6, 8, 10, 12, 14, 16, 18, 20, 22, 24, 26, 28, 30, 32, 34] -> [4, 8, 12, 16, 20, 24, 28, 32] -> [8, 16, 24, 32] -> 24 
        [2, 4, 6, 8, 10, 12, 14, 16, 18, 20, 22, 24, 26, 28, 30, 32, 34, 36] -> [2, 6, 10, 14, 18, 22, 26, 30, 34] -> [6, 14, 22, 30] -> 22
        [2, 4, 6, 8, 10, 12, 14, 16, 18, 20, 22, 24, 26, 28, 30, 32, 34, 36, 38] -> [4, 8, 12, 16, 20, 24, 28, 32, 36] -> [8, 16, 24, 32] -> 24
        [2, 4, 6, 8, 10, 12, 14, 16, 18, 20, 22, 24, 26, 28, 30, 32, 34, 36, 38, 40] -> [2, 6, 10, 14, 18, 22, 26, 30, 34, 38] -> [6, 14, 22, 30, 38] -> 30

        24 <= x <= 27 -> 14 or 16
        28 <= x <= 31 -> 22 or 24
        32 <= x <= 35 -> 30 or 32

        '''

        if n == 1:
            return 1
        
        return 2 * (n // 2 + 1 - self.lastRemaining(n // 2))